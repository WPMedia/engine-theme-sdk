name: RC build

# Controls when the action will run. Triggers the workflow on push
# events but only for the rc branch
on:
  push:
    branches:
      - rc

# Publishes beta builds with the dist tag of "rc"
jobs:
  # This workflow contains a single job called "publish"
  publish:
    name: Release candidate build publish
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.THEMES_OPS_SLACK_WEBHOOK_URL }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repo
        uses: actions/checkout@v2

      # Sets up Node v12
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "12"
          registry-url: "https://npm.pkg.github.com"

      # Caches NPM files
      - name: Cache NPM files
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Clean install (CI) dependencies if lockfile (above) changed
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Prerelease (tests and lint)
      - name: Iterate version rc
        run: |
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --local user.name "$GITHUB_ACTOR"  
          npm version prerelease --preid=rc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Publish
      - run: npm publish --tag rc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Push tag
      - run: git push origin rc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check failure status and post in themes ops channel
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
        if: failure()
